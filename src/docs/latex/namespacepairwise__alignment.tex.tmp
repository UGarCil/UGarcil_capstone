\doxysection{pairwise\+\_\+alignment Namespace Reference}
\hypertarget{namespacepairwise__alignment}{}\label{namespacepairwise__alignment}\index{pairwise\_alignment@{pairwise\_alignment}}
\doxysubsubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
float \mbox{\hyperlink{namespacepairwise__alignment_ac5149d25020d980e93abd818052a7e34}{evaluate\+Trans\+Transv}} (str s1, str s2, List\mbox{[}List\mbox{[}float\mbox{]}\mbox{]} submat)
\begin{DoxyCompactList}\small\item\em Calculate substitution score between two nucleotides. \end{DoxyCompactList}\item 
\mbox{\hyperlink{namespacepairwise__alignment_ad90cc4d0b997a1e53bc9b811cbc70cbf}{evaluate}} (int x, int y, str dir, List\mbox{[}List\mbox{[}float\mbox{]}\mbox{]} submat, List\mbox{[}List\mbox{[}float\mbox{]}\mbox{]} matrix\+\_\+F, str \mbox{\hyperlink{namespacepairwise__alignment_a3ac8d2eb5b651348e13bff9ea17bac20}{seq0}}, str \mbox{\hyperlink{namespacepairwise__alignment_a6caa17396aafc352efbc68f84c603d28}{seq1}})
\begin{DoxyCompactList}\small\item\em Calculate cell score for dynamic programming matrix. \end{DoxyCompactList}\item 
float \mbox{\hyperlink{namespacepairwise__alignment_a5cedae99db0a5a6bf5ffa9ac7612bd28}{backtracking}} (List\mbox{[}List\mbox{[}float\mbox{]}\mbox{]} matrix, str \mbox{\hyperlink{namespacepairwise__alignment_a3ac8d2eb5b651348e13bff9ea17bac20}{seq0}}, str \mbox{\hyperlink{namespacepairwise__alignment_a6caa17396aafc352efbc68f84c603d28}{seq1}})
\begin{DoxyCompactList}\small\item\em Trace back through matrix to find optimal alignment. \end{DoxyCompactList}\item 
float \mbox{\hyperlink{namespacepairwise__alignment_aad76ae366cbff49a74aff4d6ba38fb96}{needleman\+\_\+wunsch}} (str \mbox{\hyperlink{namespacepairwise__alignment_a3ac8d2eb5b651348e13bff9ea17bac20}{seq0}}, str \mbox{\hyperlink{namespacepairwise__alignment_a6caa17396aafc352efbc68f84c603d28}{seq1}}, List\mbox{[}List\mbox{[}float\mbox{]}\mbox{]} submat)
\begin{DoxyCompactList}\small\item\em Perform Needleman-\/\+Wunsch global sequence alignment. \end{DoxyCompactList}\end{DoxyCompactItemize}
\doxysubsubsection*{Variables}
\begin{DoxyCompactItemize}
\item 
str \mbox{\hyperlink{namespacepairwise__alignment_a3ac8d2eb5b651348e13bff9ea17bac20}{seq0}} = "{}TGGAT"{}
\item 
str \mbox{\hyperlink{namespacepairwise__alignment_a6caa17396aafc352efbc68f84c603d28}{seq1}} = "{}ATGGA"{}
\item 
list \mbox{\hyperlink{namespacepairwise__alignment_adb118c31c6f6c05fc857087455e84dee}{penalizing\+Cost\+Of\+\_\+baseline}}
\end{DoxyCompactItemize}


\doxysubsection{Function Documentation}
\Hypertarget{namespacepairwise__alignment_a5cedae99db0a5a6bf5ffa9ac7612bd28}\label{namespacepairwise__alignment_a5cedae99db0a5a6bf5ffa9ac7612bd28} 
\index{pairwise\_alignment@{pairwise\_alignment}!backtracking@{backtracking}}
\index{backtracking@{backtracking}!pairwise\_alignment@{pairwise\_alignment}}
\doxysubsubsection{\texorpdfstring{backtracking()}{backtracking()}}
{\footnotesize\ttfamily pairwise\+\_\+alignment.\+backtracking (\begin{DoxyParamCaption}\item[{List\mbox{[}List\mbox{[}float\mbox{]}\mbox{]}}]{matrix,  }\item[{str}]{seq0,  }\item[{str}]{seq1 }\end{DoxyParamCaption})}



Trace back through matrix to find optimal alignment. 


\begin{DoxyParams}{Parameters}
{\em matrix} & Filled dynamic programming matrix \\
\hline
{\em seq0} & First sequence \\
\hline
{\em seq1} & Second sequence \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Final alignment score
\end{DoxyReturn}
Works with reversed matrix and sequences for easier traversal Here is the caller graph for this function\+:
% FIG 0
\Hypertarget{namespacepairwise__alignment_ad90cc4d0b997a1e53bc9b811cbc70cbf}\label{namespacepairwise__alignment_ad90cc4d0b997a1e53bc9b811cbc70cbf} 
\index{pairwise\_alignment@{pairwise\_alignment}!evaluate@{evaluate}}
\index{evaluate@{evaluate}!pairwise\_alignment@{pairwise\_alignment}}
\doxysubsubsection{\texorpdfstring{evaluate()}{evaluate()}}
{\footnotesize\ttfamily pairwise\+\_\+alignment.\+evaluate (\begin{DoxyParamCaption}\item[{int}]{x,  }\item[{int}]{y,  }\item[{str}]{dir,  }\item[{List\mbox{[}List\mbox{[}float\mbox{]}\mbox{]}}]{submat,  }\item[{List\mbox{[}List\mbox{[}float\mbox{]}\mbox{]}}]{matrix\+\_\+F,  }\item[{str}]{seq0,  }\item[{str}]{seq1 }\end{DoxyParamCaption})}



Calculate cell score for dynamic programming matrix. 


\begin{DoxyParams}{Parameters}
{\em x} & Column index in matrix \\
\hline
{\em y} & Row index in matrix \\
\hline
{\em dir} & Movement direction\+: "{}l"{} (left), "{}t"{} (top), "{}d"{} (diagonal) \\
\hline
{\em submat} & Substitution matrix \\
\hline
{\em matrix\+\_\+F} & Dynamic programming matrix \\
\hline
{\em seq0} & First input sequence \\
\hline
{\em seq1} & Second input sequence \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Calculated score for current cell
\end{DoxyReturn}
Implements gap penalty (-\/2) and substitution scoring Here is the call graph for this function\+:
% FIG 1
Here is the caller graph for this function\+:
% FIG 2
\Hypertarget{namespacepairwise__alignment_ac5149d25020d980e93abd818052a7e34}\label{namespacepairwise__alignment_ac5149d25020d980e93abd818052a7e34} 
\index{pairwise\_alignment@{pairwise\_alignment}!evaluateTransTransv@{evaluateTransTransv}}
\index{evaluateTransTransv@{evaluateTransTransv}!pairwise\_alignment@{pairwise\_alignment}}
\doxysubsubsection{\texorpdfstring{evaluateTransTransv()}{evaluateTransTransv()}}
{\footnotesize\ttfamily pairwise\+\_\+alignment.\+evaluate\+Trans\+Transv (\begin{DoxyParamCaption}\item[{str}]{s1,  }\item[{str}]{s2,  }\item[{List\mbox{[}List\mbox{[}float\mbox{]}\mbox{]}}]{submat }\end{DoxyParamCaption})}



Calculate substitution score between two nucleotides. 


\begin{DoxyParams}{Parameters}
{\em s1} & First nucleotide character (A/\+T/\+G/C) \\
\hline
{\em s2} & Second nucleotide character (A/\+T/\+G/C) \\
\hline
{\em submat} & Substitution matrix (4x4 list) \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Score from substitution matrix
\end{DoxyReturn}
Uses nucleotide order\+: \mbox{[}"{}\+A"{},"{}\+T"{},"{}\+G"{},"{}\+C"{}\mbox{]} for matrix indexing Here is the caller graph for this function\+:
% FIG 3
\Hypertarget{namespacepairwise__alignment_aad76ae366cbff49a74aff4d6ba38fb96}\label{namespacepairwise__alignment_aad76ae366cbff49a74aff4d6ba38fb96} 
\index{pairwise\_alignment@{pairwise\_alignment}!needleman\_wunsch@{needleman\_wunsch}}
\index{needleman\_wunsch@{needleman\_wunsch}!pairwise\_alignment@{pairwise\_alignment}}
\doxysubsubsection{\texorpdfstring{needleman\_wunsch()}{needleman\_wunsch()}}
{\footnotesize\ttfamily pairwise\+\_\+alignment.\+needleman\+\_\+wunsch (\begin{DoxyParamCaption}\item[{str}]{seq0,  }\item[{str}]{seq1,  }\item[{List\mbox{[}List\mbox{[}float\mbox{]}\mbox{]}}]{submat }\end{DoxyParamCaption})}



Perform Needleman-\/\+Wunsch global sequence alignment. 


\begin{DoxyParams}{Parameters}
{\em seq0} & First sequence to align \\
\hline
{\em seq1} & Second sequence to align \\
\hline
{\em submat} & Substitution matrix (4x4 list) \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Optimal alignment score
\end{DoxyReturn}
Creates and fills dynamic programming matrix, then backtracks Here is the call graph for this function\+:
% FIG 4


\doxysubsection{Variable Documentation}
\Hypertarget{namespacepairwise__alignment_adb118c31c6f6c05fc857087455e84dee}\label{namespacepairwise__alignment_adb118c31c6f6c05fc857087455e84dee} 
\index{pairwise\_alignment@{pairwise\_alignment}!penalizingCostOf\_baseline@{penalizingCostOf\_baseline}}
\index{penalizingCostOf\_baseline@{penalizingCostOf\_baseline}!pairwise\_alignment@{pairwise\_alignment}}
\doxysubsubsection{\texorpdfstring{penalizingCostOf\_baseline}{penalizingCostOf\_baseline}}
{\footnotesize\ttfamily list pairwise\+\_\+alignment.\+penalizing\+Cost\+Of\+\_\+baseline}

{\bfseries Initial value\+:}
\begin{DoxyCode}{0}
\DoxyCodeLine{00001\ =\ \ [}
\DoxyCodeLine{00002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \textcolor{comment}{\#\ \ A\ \ T\ \ G\ \ C}}
\DoxyCodeLine{00003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ [0,-\/3,-\/1,-\/3],\ \textcolor{comment}{\#\ A\ \#baseline}}
\DoxyCodeLine{00004\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ [-\/3,0,-\/3,-\/1],\ \textcolor{comment}{\#\ T}}
\DoxyCodeLine{00005\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ [-\/1,-\/3,0,-\/3],\ \textcolor{comment}{\#\ G}}
\DoxyCodeLine{00006\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ [-\/3,-\/1,-\/3,0]\ \ \textcolor{comment}{\#\ C}}
\DoxyCodeLine{00007\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ]}

\end{DoxyCode}
\Hypertarget{namespacepairwise__alignment_a3ac8d2eb5b651348e13bff9ea17bac20}\label{namespacepairwise__alignment_a3ac8d2eb5b651348e13bff9ea17bac20} 
\index{pairwise\_alignment@{pairwise\_alignment}!seq0@{seq0}}
\index{seq0@{seq0}!pairwise\_alignment@{pairwise\_alignment}}
\doxysubsubsection{\texorpdfstring{seq0}{seq0}}
{\footnotesize\ttfamily str pairwise\+\_\+alignment.\+seq0 = "{}TGGAT"{}}

\Hypertarget{namespacepairwise__alignment_a6caa17396aafc352efbc68f84c603d28}\label{namespacepairwise__alignment_a6caa17396aafc352efbc68f84c603d28} 
\index{pairwise\_alignment@{pairwise\_alignment}!seq1@{seq1}}
\index{seq1@{seq1}!pairwise\_alignment@{pairwise\_alignment}}
\doxysubsubsection{\texorpdfstring{seq1}{seq1}}
{\footnotesize\ttfamily str pairwise\+\_\+alignment.\+seq1 = "{}ATGGA"{}}

